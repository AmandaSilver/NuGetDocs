@{
    Layout = "_Layout.cshtml";
}

<div id="wrapper">
    <div id="sidebar-wrapper" style="background-color:transparent">
        <div id="about" class="nano">
            <div class="nano-content">
                <aside id="toc">
                    @TopicHelper.RenderDocumentationIndex()
                </aside>
            </div>
        </div>
    </div>
    <div id="page-content-wrapper">
        <div class="container-fluid">
            <div class="col-xs-12 col-md-8">
                <div class="content">
                    <section>

                    </section>
                    <section>
                        @RenderBody()
                    </section>
                </div>
            </div>
            <nav class="col-xs-4 bs-docs-sidebar visible-md visible-lg">
                <ul id="baseSidebar" class="nav nav-stacked">
                    @using NuGet.Docs
                    @{

                        List<Heading> headings = Page.Headings;
                        bool hasMoreThanOneHeading = headings != null && headings.Count > 1;
                        if (hasMoreThanOneHeading)
                        {

                            var minHeading = headings.Min(h => h.Level);
                            var deltaTo3 = 3 - minHeading;
                            bool isClosed = true; ;

                            for (int i = 0; i < headings.Count; i++)
                            {
                                var heading = headings[i];
                                if (heading.Level == 1)
                                {
                    <li>
                        <a href="#user-content-@heading.ID">@heading.Text</a>
                    </li>
                                }
                                else if (heading.Level == 2)
                                {
                                    if (!isClosed)
                                    {
                                        WriteLiteral("</li>");
                                    }

                                    WriteLiteral("<li>");
                    <a href="#user-content-@heading.ID">@heading.Text</a>
                                    if (i + 1 < headings.Count)
                                    {
                                        if (headings[i + 1].Level > 2)
                                        {
                                            WriteLiteral("<ul class=\"nav nav - stacked\">");
                                            for (int j = i + 1; j < headings.Count; j++)
                                            {
                                                if (headings[j].Level < 3)
                                                {
                                                    i = j - 1;
                                                    WriteLiteral("</ul>");
                                                    break;
                                                }

                    <li>
                        <a href="#user-content-@headings[j].ID">@headings[j].Text</a>
                    </li>
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>
